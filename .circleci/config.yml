# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/aphexddb/helloworld

    steps:
      # build the application
      - checkout 
      - run: make release

      - setup_remote_docker:
          docker_layer_caching: true

      # build the application image (run with sudo for local circleci dev builds)
      - run: 
          name: Build and tag application Docker image
          command: make docker

      - run:
          name: Install AWS CLI
          command: |
            curl -O https://bootstrap.pypa.io/get-pip.py
            python get-pip.py --user
            PATH=~/.local/bin:$PATH pip install awscli --upgrade --user

      - deploy:
          name: Push application Docker image
          command: |
            VERSION=`cat ./VERSION`-`git describe --tags --always --dirty`
            export PATH=~/.local/bin:$PATH
            if [ "${CIRCLE_BRANCH}" == "master" ]; then              
              login="$(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})"
              tagCmd="docker tag helloworld:${VERSION} ${ECR_ENDPOINT}/helloworld:${VERSION}"
              pushCmd="docker push ${ECR_ENDPOINT}/helloworld:${VERSION}"
              echo "Logging into Docker registry..."
              ${login}
              echo "Tagging image -> ${tagCmd}"
              ${tagCmd}
              echo "Pushing image -> ${pushCmd}"
              ${pushCmd}
            fi            
