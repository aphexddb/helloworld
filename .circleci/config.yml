# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/aphexddb/helloworld
    steps:
      - checkout
      - setup_remote_docker
      - setup-docker-engine

      # build the application
      - run: go get -v -t -d ./...
      - run: go test -v ./...      
      - run: 
          name: Build helloworld
          command: go build -o helloworld main.go

      # build the application image
      # -v /var/run/docker.sock:/var/run/docker.sock 
      - run: 
          name: Build application Docker image
          command: sudo docker build -t aphexddb/helloworld:${CIRCLE_SHA1} .      

      - run:
          name: Install AWS CLI
          command: |
            curl -O https://bootstrap.pypa.io/get-pip.py
            python get-pip.py --user
            PATH=~/.local/bin:$PATH pip install awscli --upgrade --user

      - deploy:
          name: Push application Docker image
          command: |
            export PATH=~/.local/bin:$PATH
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              login="$(aws ecr get-login)"
              ${login}
              docker tag helloworld "${ECR_ENDPOINT}/helloworld:${CIRCLE_SHA1}"
              docker push "${ECR_ENDPOINT}/helloworld:${CIRCLE_SHA1}"
            fi            
